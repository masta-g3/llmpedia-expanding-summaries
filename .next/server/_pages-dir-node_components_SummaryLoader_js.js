"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_pages-dir-node_components_SummaryLoader_js";
exports.ids = ["_pages-dir-node_components_SummaryLoader_js"];
exports.modules = {

/***/ "(pages-dir-node)/./components/ExpandableSummary.js":
/*!*****************************************!*\
  !*** ./components/ExpandableSummary.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! marked */ \"marked\");\n/* harmony import */ var katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! katex/dist/katex.min.css */ \"(pages-dir-node)/./node_modules/katex/dist/katex.min.css\");\n/* harmony import */ var katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([marked__WEBPACK_IMPORTED_MODULE_2__]);\nmarked__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Custom renderer for LaTeX content\nconst customRenderer = {\n    // We'll use KaTeX's auto-render extension in the client-side\n    paragraph (text) {\n        return `<p>${text}</p>`;\n    }\n};\nconst ExpandableSummary = ({ summary, expansionLevel })=>{\n    const [parsedContent, setParsedContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [isTransitioning, setIsTransitioning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Parse the content with original and new tags\n    const processContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ExpandableSummary.useMemo[processContent]\": ()=>{\n            console.log('Summary in ExpandableSummary:', typeof summary);\n            // Ensure we have a string\n            if (!summary || typeof summary !== 'string') {\n                console.error('Invalid summary type:', typeof summary);\n                return '<p>Error: Invalid summary data</p>';\n            }\n            // First check if the summary contains our expected tags\n            const hasTags = summary.includes('<original>') || summary.includes('<new>');\n            let processedSummary = summary;\n            if (hasTags) {\n                // Replace all <original> and <new> tags with spans that have appropriate classes\n                processedSummary = summary.replace(/<original>(.*?)<\\/original>/gs, '<span class=\"original-content\">$1</span>').replace(/<new>(.*?)<\\/new>/gs, '<span class=\"new-content\">$1</span>');\n            } else {\n                // If the summary doesn't have tags, split it into paragraphs\n                // and mark some as original and some as new for the slider to work\n                const paragraphs = summary.split(/\\n\\s*\\n/).filter({\n                    \"ExpandableSummary.useMemo[processContent].paragraphs\": (p)=>p.trim().length > 0\n                }[\"ExpandableSummary.useMemo[processContent].paragraphs\"]);\n                if (paragraphs.length > 0) {\n                    // Mark first 30% of paragraphs as original, rest as new\n                    const originalCount = Math.max(1, Math.ceil(paragraphs.length * 0.3));\n                    processedSummary = paragraphs.map({\n                        \"ExpandableSummary.useMemo[processContent]\": (paragraph, index)=>{\n                            const isOriginal = index < originalCount;\n                            const className = isOriginal ? 'original-content' : 'new-content';\n                            return `<span class=\"${className}\">${paragraph}</span>`;\n                        }\n                    }[\"ExpandableSummary.useMemo[processContent]\"]).join('\\n\\n');\n                } else {\n                    // Fallback: wrap everything as original\n                    processedSummary = `<span class=\"original-content\">${summary}</span>`;\n                }\n            }\n            // Convert markdown to HTML\n            return marked__WEBPACK_IMPORTED_MODULE_2__.marked.parse(processedSummary);\n        }\n    }[\"ExpandableSummary.useMemo[processContent]\"], [\n        summary\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            setParsedContent(processContent);\n        }\n    }[\"ExpandableSummary.useEffect\"], [\n        processContent\n    ]);\n    // Apply visibility based on the expansion level\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            if (typeof document !== 'undefined') {\n                setIsTransitioning(true);\n                // Small delay to ensure transitions are visible\n                const transitionDelay = setTimeout({\n                    \"ExpandableSummary.useEffect.transitionDelay\": ()=>{\n                        const newElements = document.querySelectorAll('.new-content');\n                        // Calculate how many elements should be visible based on the expansion level\n                        const totalNewElements = newElements.length;\n                        const visibleCount = Math.ceil(expansionLevel / 100 * totalNewElements);\n                        // Set visibility for each element\n                        newElements.forEach({\n                            \"ExpandableSummary.useEffect.transitionDelay\": (element, index)=>{\n                                if (index < visibleCount) {\n                                    element.style.opacity = '1';\n                                    element.style.display = 'inline';\n                                    // Add subtle highlight effect for newly visible content\n                                    element.style.backgroundColor = 'var(--new-color)';\n                                } else {\n                                    element.style.opacity = '0';\n                                    element.style.display = 'none';\n                                }\n                            }\n                        }[\"ExpandableSummary.useEffect.transitionDelay\"]);\n                        setIsTransitioning(false);\n                    }\n                }[\"ExpandableSummary.useEffect.transitionDelay\"], 50);\n                return ({\n                    \"ExpandableSummary.useEffect\": ()=>clearTimeout(transitionDelay)\n                })[\"ExpandableSummary.useEffect\"];\n            }\n        }\n    }[\"ExpandableSummary.useEffect\"], [\n        expansionLevel\n    ]);\n    // Configure marked.js with custom renderer\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            marked__WEBPACK_IMPORTED_MODULE_2__.marked.setOptions({\n                breaks: true,\n                gfm: true,\n                renderer: Object.assign(new marked__WEBPACK_IMPORTED_MODULE_2__.marked.Renderer(), customRenderer)\n            });\n        }\n    }[\"ExpandableSummary.useEffect\"], []);\n    // Handle LaTeX rendering on the client side only\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            if (false) {}\n        }\n    }[\"ExpandableSummary.useEffect\"], [\n        parsedContent\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `summary-content ${isTransitioning ? 'fade-in' : ''}`,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            dangerouslySetInnerHTML: {\n                __html: parsedContent\n            }\n        }, void 0, false, {\n            fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/ExpandableSummary.js\",\n            lineNumber: 129,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/ExpandableSummary.js\",\n        lineNumber: 128,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExpandableSummary);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/ExpandableSummary.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/SummaryLoader.js":
/*!*************************************!*\
  !*** ./components/SummaryLoader.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ExpandableSummary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ExpandableSummary */ \"(pages-dir-node)/./components/ExpandableSummary.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ExpandableSummary__WEBPACK_IMPORTED_MODULE_2__]);\n_ExpandableSummary__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst SummaryLoader = ({ summary, expansionLevel })=>{\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [processedSummary, setProcessedSummary] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SummaryLoader.useEffect\": ()=>{\n            setIsClient(true);\n            // Process the summary\n            if (summary) {\n                console.log('Raw summary in SummaryLoader:', typeof summary);\n                try {\n                    // Make sure we have a string\n                    if (typeof summary === 'string') {\n                        setProcessedSummary(summary);\n                    } else if (summary && typeof summary === 'object') {\n                        // If it's an object with a summary property\n                        if (summary.summary && typeof summary.summary === 'string') {\n                            setProcessedSummary(summary.summary);\n                        } else {\n                            // Try to convert to string\n                            const stringValue = String(summary);\n                            if (stringValue !== '[object Object]') {\n                                setProcessedSummary(stringValue);\n                            } else {\n                                console.error('Unable to process summary object:', summary);\n                                setProcessedSummary('Error: Unable to format summary data');\n                            }\n                        }\n                    } else {\n                        // For any other type, convert to string\n                        setProcessedSummary(String(summary || ''));\n                    }\n                } catch (error) {\n                    console.error('Error processing summary in SummaryLoader:', error);\n                    setProcessedSummary('Error processing summary content');\n                }\n            } else {\n                setProcessedSummary('No summary available');\n            }\n        }\n    }[\"SummaryLoader.useEffect\"], [\n        summary\n    ]);\n    if (!isClient) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"loading-placeholder\",\n            children: \"Loading summary...\"\n        }, void 0, false, {\n            fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/SummaryLoader.js\",\n            lineNumber: 48,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: processedSummary ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ExpandableSummary__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            summary: processedSummary,\n            expansionLevel: expansionLevel\n        }, void 0, false, {\n            fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/SummaryLoader.js\",\n            lineNumber: 57,\n            columnNumber: 9\n        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"error-message\",\n            children: \"Unable to load summary content. The format may not be supported.\"\n        }, void 0, false, {\n            fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/SummaryLoader.js\",\n            lineNumber: 62,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/SummaryLoader.js\",\n        lineNumber: 55,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SummaryLoader);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvU3VtbWFyeUxvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ1E7QUFFcEQsTUFBTUcsZ0JBQWdCLENBQUMsRUFBRUMsT0FBTyxFQUFFQyxjQUFjLEVBQUU7SUFDaEQsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdQLCtDQUFRQSxDQUFDO0lBQ3pDLE1BQU0sQ0FBQ1Esa0JBQWtCQyxvQkFBb0IsR0FBR1QsK0NBQVFBLENBQUM7SUFFekRDLGdEQUFTQTttQ0FBQztZQUNSTSxZQUFZO1lBRVosc0JBQXNCO1lBQ3RCLElBQUlILFNBQVM7Z0JBQ1hNLFFBQVFDLEdBQUcsQ0FBQyxpQ0FBaUMsT0FBT1A7Z0JBRXBELElBQUk7b0JBQ0YsNkJBQTZCO29CQUM3QixJQUFJLE9BQU9BLFlBQVksVUFBVTt3QkFDL0JLLG9CQUFvQkw7b0JBQ3RCLE9BQU8sSUFBSUEsV0FBVyxPQUFPQSxZQUFZLFVBQVU7d0JBQ2pELDRDQUE0Qzt3QkFDNUMsSUFBSUEsUUFBUUEsT0FBTyxJQUFJLE9BQU9BLFFBQVFBLE9BQU8sS0FBSyxVQUFVOzRCQUMxREssb0JBQW9CTCxRQUFRQSxPQUFPO3dCQUNyQyxPQUFPOzRCQUNMLDJCQUEyQjs0QkFDM0IsTUFBTVEsY0FBY0MsT0FBT1Q7NEJBQzNCLElBQUlRLGdCQUFnQixtQkFBbUI7Z0NBQ3JDSCxvQkFBb0JHOzRCQUN0QixPQUFPO2dDQUNMRixRQUFRSSxLQUFLLENBQUMscUNBQXFDVjtnQ0FDbkRLLG9CQUFvQjs0QkFDdEI7d0JBQ0Y7b0JBQ0YsT0FBTzt3QkFDTCx3Q0FBd0M7d0JBQ3hDQSxvQkFBb0JJLE9BQU9ULFdBQVc7b0JBQ3hDO2dCQUNGLEVBQUUsT0FBT1UsT0FBTztvQkFDZEosUUFBUUksS0FBSyxDQUFDLDhDQUE4Q0E7b0JBQzVETCxvQkFBb0I7Z0JBQ3RCO1lBQ0YsT0FBTztnQkFDTEEsb0JBQW9CO1lBQ3RCO1FBQ0Y7a0NBQUc7UUFBQ0w7S0FBUTtJQUVaLElBQUksQ0FBQ0UsVUFBVTtRQUNiLHFCQUNFLDhEQUFDUztZQUFJQyxXQUFVO3NCQUFzQjs7Ozs7O0lBSXpDO0lBRUEscUJBQ0UsOERBQUNEO2tCQUNFUCxpQ0FDQyw4REFBQ04sMERBQWlCQTtZQUNoQkUsU0FBU0k7WUFDVEgsZ0JBQWdCQTs7Ozs7c0NBR2xCLDhEQUFDVTtZQUFJQyxXQUFVO3NCQUFnQjs7Ozs7Ozs7Ozs7QUFNdkM7QUFFQSxpRUFBZWIsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hbmFnZXIvQ29kZS9taWNyb19hcHBzL2xsbXBlZGlhLWV4cGFuZGluZy1zdW1tYXJpZXMvY29tcG9uZW50cy9TdW1tYXJ5TG9hZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRXhwYW5kYWJsZVN1bW1hcnkgZnJvbSAnLi9FeHBhbmRhYmxlU3VtbWFyeSc7XG5cbmNvbnN0IFN1bW1hcnlMb2FkZXIgPSAoeyBzdW1tYXJ5LCBleHBhbnNpb25MZXZlbCB9KSA9PiB7XG4gIGNvbnN0IFtpc0NsaWVudCwgc2V0SXNDbGllbnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbcHJvY2Vzc2VkU3VtbWFyeSwgc2V0UHJvY2Vzc2VkU3VtbWFyeV0gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRJc0NsaWVudCh0cnVlKTtcbiAgICBcbiAgICAvLyBQcm9jZXNzIHRoZSBzdW1tYXJ5XG4gICAgaWYgKHN1bW1hcnkpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdSYXcgc3VtbWFyeSBpbiBTdW1tYXJ5TG9hZGVyOicsIHR5cGVvZiBzdW1tYXJ5KTtcbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gTWFrZSBzdXJlIHdlIGhhdmUgYSBzdHJpbmdcbiAgICAgICAgaWYgKHR5cGVvZiBzdW1tYXJ5ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHNldFByb2Nlc3NlZFN1bW1hcnkoc3VtbWFyeSk7XG4gICAgICAgIH0gZWxzZSBpZiAoc3VtbWFyeSAmJiB0eXBlb2Ygc3VtbWFyeSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAvLyBJZiBpdCdzIGFuIG9iamVjdCB3aXRoIGEgc3VtbWFyeSBwcm9wZXJ0eVxuICAgICAgICAgIGlmIChzdW1tYXJ5LnN1bW1hcnkgJiYgdHlwZW9mIHN1bW1hcnkuc3VtbWFyeSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHNldFByb2Nlc3NlZFN1bW1hcnkoc3VtbWFyeS5zdW1tYXJ5KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gVHJ5IHRvIGNvbnZlcnQgdG8gc3RyaW5nXG4gICAgICAgICAgICBjb25zdCBzdHJpbmdWYWx1ZSA9IFN0cmluZyhzdW1tYXJ5KTtcbiAgICAgICAgICAgIGlmIChzdHJpbmdWYWx1ZSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgICAgICAgICAgc2V0UHJvY2Vzc2VkU3VtbWFyeShzdHJpbmdWYWx1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gcHJvY2VzcyBzdW1tYXJ5IG9iamVjdDonLCBzdW1tYXJ5KTtcbiAgICAgICAgICAgICAgc2V0UHJvY2Vzc2VkU3VtbWFyeSgnRXJyb3I6IFVuYWJsZSB0byBmb3JtYXQgc3VtbWFyeSBkYXRhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIEZvciBhbnkgb3RoZXIgdHlwZSwgY29udmVydCB0byBzdHJpbmdcbiAgICAgICAgICBzZXRQcm9jZXNzZWRTdW1tYXJ5KFN0cmluZyhzdW1tYXJ5IHx8ICcnKSk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHByb2Nlc3Npbmcgc3VtbWFyeSBpbiBTdW1tYXJ5TG9hZGVyOicsIGVycm9yKTtcbiAgICAgICAgc2V0UHJvY2Vzc2VkU3VtbWFyeSgnRXJyb3IgcHJvY2Vzc2luZyBzdW1tYXJ5IGNvbnRlbnQnKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0UHJvY2Vzc2VkU3VtbWFyeSgnTm8gc3VtbWFyeSBhdmFpbGFibGUnKTtcbiAgICB9XG4gIH0sIFtzdW1tYXJ5XSk7XG5cbiAgaWYgKCFpc0NsaWVudCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmctcGxhY2Vob2xkZXJcIj5cbiAgICAgICAgTG9hZGluZyBzdW1tYXJ5Li4uXG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAge3Byb2Nlc3NlZFN1bW1hcnkgPyAoXG4gICAgICAgIDxFeHBhbmRhYmxlU3VtbWFyeVxuICAgICAgICAgIHN1bW1hcnk9e3Byb2Nlc3NlZFN1bW1hcnl9XG4gICAgICAgICAgZXhwYW5zaW9uTGV2ZWw9e2V4cGFuc2lvbkxldmVsfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlcnJvci1tZXNzYWdlXCI+XG4gICAgICAgICAgVW5hYmxlIHRvIGxvYWQgc3VtbWFyeSBjb250ZW50LiBUaGUgZm9ybWF0IG1heSBub3QgYmUgc3VwcG9ydGVkLlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdW1tYXJ5TG9hZGVyOyJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkV4cGFuZGFibGVTdW1tYXJ5IiwiU3VtbWFyeUxvYWRlciIsInN1bW1hcnkiLCJleHBhbnNpb25MZXZlbCIsImlzQ2xpZW50Iiwic2V0SXNDbGllbnQiLCJwcm9jZXNzZWRTdW1tYXJ5Iiwic2V0UHJvY2Vzc2VkU3VtbWFyeSIsImNvbnNvbGUiLCJsb2ciLCJzdHJpbmdWYWx1ZSIsIlN0cmluZyIsImVycm9yIiwiZGl2IiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/SummaryLoader.js\n");

/***/ })

};
;