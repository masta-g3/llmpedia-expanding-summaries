"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_pages-dir-browser_components_SummaryLoader_js",{

/***/ "(pages-dir-browser)/./components/ExpandableSummary.js":
/*!*****************************************!*\
  !*** ./components/ExpandableSummary.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! marked */ \"(pages-dir-browser)/./node_modules/marked/lib/marked.esm.js\");\n/* harmony import */ var katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! katex/dist/katex.min.css */ \"(pages-dir-browser)/./node_modules/katex/dist/katex.min.css\");\n/* harmony import */ var katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(katex_dist_katex_min_css__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$();\n\n\n\n// Custom renderer for LaTeX content\nconst customRenderer = {\n    // We'll use KaTeX's auto-render extension in the client-side\n    paragraph (text) {\n        return \"<p>\".concat(text, \"</p>\");\n    }\n};\nconst ExpandableSummary = (param)=>{\n    let { summary, expansionLevel } = param;\n    _s();\n    const [parsedContent, setParsedContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [isTransitioning, setIsTransitioning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Parse the content with original and new tags\n    const processContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ExpandableSummary.useMemo[processContent]\": ()=>{\n            console.log('Summary in ExpandableSummary:', typeof summary);\n            // Ensure we have a string\n            if (!summary || typeof summary !== 'string') {\n                console.error('Invalid summary type:', typeof summary);\n                return '<p>Error: Invalid summary data</p>';\n            }\n            // First check if the summary contains our expected tags\n            const hasTags = summary.includes('<original>') || summary.includes('<new>');\n            let processedSummary = summary;\n            if (hasTags) {\n                // Replace all <original> and <new> tags with spans that have appropriate classes\n                processedSummary = summary.replace(RegExp(\"<original>(.*?)<\\\\/original>\", \"gs\"), '<span class=\"original-content\">$1</span>').replace(RegExp(\"<new>(.*?)<\\\\/new>\", \"gs\"), '<span class=\"new-content\">$1</span>');\n            } else {\n                // If the summary doesn't have tags, split it into paragraphs\n                // and mark some as original and some as new for the slider to work\n                const paragraphs = summary.split(/\\n\\s*\\n/).filter({\n                    \"ExpandableSummary.useMemo[processContent].paragraphs\": (p)=>p.trim().length > 0\n                }[\"ExpandableSummary.useMemo[processContent].paragraphs\"]);\n                if (paragraphs.length > 0) {\n                    // Mark first 30% of paragraphs as original, rest as new\n                    const originalCount = Math.max(1, Math.ceil(paragraphs.length * 0.3));\n                    processedSummary = paragraphs.map({\n                        \"ExpandableSummary.useMemo[processContent]\": (paragraph, index)=>{\n                            const isOriginal = index < originalCount;\n                            const className = isOriginal ? 'original-content' : 'new-content';\n                            return '<span class=\"'.concat(className, '\">').concat(paragraph, \"</span>\");\n                        }\n                    }[\"ExpandableSummary.useMemo[processContent]\"]).join('\\n\\n');\n                } else {\n                    // Fallback: wrap everything as original\n                    processedSummary = '<span class=\"original-content\">'.concat(summary, \"</span>\");\n                }\n            }\n            // Convert markdown to HTML\n            return marked__WEBPACK_IMPORTED_MODULE_2__.marked.parse(processedSummary);\n        }\n    }[\"ExpandableSummary.useMemo[processContent]\"], [\n        summary\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            setParsedContent(processContent);\n        }\n    }[\"ExpandableSummary.useEffect\"], [\n        processContent\n    ]);\n    // Apply visibility based on the expansion level\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            if (typeof document !== 'undefined') {\n                setIsTransitioning(true);\n                // Small delay to ensure transitions are visible\n                const transitionDelay = setTimeout({\n                    \"ExpandableSummary.useEffect.transitionDelay\": ()=>{\n                        const newElements = document.querySelectorAll('.new-content');\n                        // Calculate how many elements should be visible based on the expansion level\n                        const totalNewElements = newElements.length;\n                        const visibleCount = Math.ceil(expansionLevel / 100 * totalNewElements);\n                        // Set visibility for each element\n                        newElements.forEach({\n                            \"ExpandableSummary.useEffect.transitionDelay\": (element, index)=>{\n                                if (index < visibleCount) {\n                                    element.style.opacity = '1';\n                                    element.style.display = 'inline';\n                                    // Add subtle highlight effect for newly visible content\n                                    element.style.backgroundColor = 'var(--new-color)';\n                                } else {\n                                    element.style.opacity = '0';\n                                    element.style.display = 'none';\n                                }\n                            }\n                        }[\"ExpandableSummary.useEffect.transitionDelay\"]);\n                        setIsTransitioning(false);\n                    }\n                }[\"ExpandableSummary.useEffect.transitionDelay\"], 50);\n                return ({\n                    \"ExpandableSummary.useEffect\": ()=>clearTimeout(transitionDelay)\n                })[\"ExpandableSummary.useEffect\"];\n            }\n        }\n    }[\"ExpandableSummary.useEffect\"], [\n        expansionLevel\n    ]);\n    // Configure marked.js with custom renderer\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            marked__WEBPACK_IMPORTED_MODULE_2__.marked.setOptions({\n                breaks: true,\n                gfm: true,\n                renderer: Object.assign(new marked__WEBPACK_IMPORTED_MODULE_2__.marked.Renderer(), customRenderer)\n            });\n        }\n    }[\"ExpandableSummary.useEffect\"], []);\n    // Handle LaTeX rendering on the client side only\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ExpandableSummary.useEffect\": ()=>{\n            if (true) {\n                // Instead of using KaTeX's auto-render, we'll handle LaTeX formatting in a simpler way\n                // for this lightweight application\n                const mathElements = document.querySelectorAll('.math');\n                mathElements.forEach({\n                    \"ExpandableSummary.useEffect\": (element)=>{\n                        if (element.textContent.includes('$')) {\n                            // Basic styling for math expressions\n                            element.style.fontFamily = 'serif';\n                            element.style.fontStyle = 'italic';\n                        }\n                    }\n                }[\"ExpandableSummary.useEffect\"]);\n            }\n        }\n    }[\"ExpandableSummary.useEffect\"], [\n        parsedContent\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"summary-content \".concat(isTransitioning ? 'fade-in' : ''),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            dangerouslySetInnerHTML: {\n                __html: parsedContent\n            }\n        }, void 0, false, {\n            fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/ExpandableSummary.js\",\n            lineNumber: 129,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/manager/Code/micro_apps/llmpedia-expanding-summaries/components/ExpandableSummary.js\",\n        lineNumber: 128,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ExpandableSummary, \"Tjj1capCXCjfB4bJ4jbMGFYb/yc=\");\n_c = ExpandableSummary;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ExpandableSummary);\nvar _c;\n$RefreshReg$(_c, \"ExpandableSummary\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/ExpandableSummary.js\n"));

/***/ })

});